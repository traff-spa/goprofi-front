import React, { useEffect } from 'react';
import { Spin } from 'antd'
import { LoadingOutlined } from '@ant-design/icons';
import { useParams, useNavigate } from 'react-router-dom';

import { useTestStore } from '@/store/testStore';
import { useAuthStore } from '@/store/authStore';
import { ROUTES } from '@/app/routes/paths';
import { getProfessionsForType, getTypeDetails } from '@app/helpers/professions';

import LampIcon from '@/assets/icons/lamp.svg?react';
import '@app/styles/test.scss';

import { formatDate } from '../helpers/dateHelpers'
import PurchaseModal from './Modals/PurchaseModal'

const TestResult: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  const { user } = useAuthStore();
  const { fetchTestResult, currentTestResult, isLoading, error } = useTestStore();

  const setTestTitle = useTestStore(state => state.setTestTitle);
  const setTestHistoryPage = useTestStore(state => state.setIsTestResultPage);

  useEffect(() => {
      setTestHistoryPage(true);
      setTestTitle('"–•—Ç–æ —è"');

      // Clean up when a component unmounts
      return () => {
          setTestHistoryPage(false);
          setTestTitle('');
      }
  }, []);

  useEffect(() => {
    if (!user) {
      navigate(ROUTES.AUTH);
      return;
    }

    if (id) {
      fetchTestResult(parseInt(id, 10));
    }
  }, [id, user, navigate, fetchTestResult]);

  if (isLoading) {
      return (
          <div className="test-container loader">
              <Spin indicator={<LoadingOutlined style={{ fontSize: 48 }} spin />} />
          </div>
      )
  }

  if (error || !currentTestResult || !currentTestResult.completed_at || !id) {
    return (
      <div className="test-result">
        <div className="test-container">
          <div>
            <h2>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤</h2>
            <p>{error || '–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ —Ç–µ—Å—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.'}</p>
            <button
                onClick={() => navigate(ROUTES.MAIN)}
                className="test-results-btn"
                type="button"
            >
                –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É
            </button>
          </div>
        </div>
      </div>
    );
  }

  // Extracting result data
  const { primary_type, result_data, test_name, completed_at } = currentTestResult;
  const isPaid = currentTestResult?.is_paid
  const primaryType = result_data?.primary_type || primary_type;
  const wingType = result_data?.wing_type;
  const formattedDate = formatDate(completed_at);

  // Get professions based on primary type ID
  const professionCategories = getProfessionsForType(isPaid ? primaryType?.id : 999);

  // Get type details based on primary type and wing type
  const typeDetails = getTypeDetails(primaryType?.id, wingType?.id);
  const contentData = isPaid ? typeDetails?.mainTraits : typeDetails?.mainTraits?.slice(0, 3)

  return (
    <>
      <div className="result">
        <div className="test-result">
          <div className="test-result__inner">
            <div className="test-result__title">
              –í—ñ—Ç–∞—î–º–æ –∑ —É—Å–ø—ñ—à–Ω–∏–º –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è–º —Ç–µ—Å—Ç—É {test_name} –æ {formattedDate} üéâ
            </div>

            <div className="test-result__description">
              {primaryType?.id !== 1 && <><span>–í–∏ {typeDetails.typeNumber} —Ç–∏–ø –µ–Ω–Ω–µ–∞–≥—Ä–∞–º–∏</span>,</>} {typeDetails.typeDescription}
            </div>

            <div className={!isPaid ? 'test-result__content hidden' : 'test-result__content'}>
              {primaryType?.id !== 1 && <h3>–û—Å–Ω–æ–≤–Ω—ñ —Ä–∏—Å–∏ {typeDetails.typeNumber}-–≥–æ —Ç–∏–ø—É:</h3>}

              {contentData?.map((trait, index) => (
                <React.Fragment key={index}>
                  <h3>{index + 1}. {trait?.title}</h3>
                  {trait?.points?.map((point, pointIndex) => (
                    <p key={pointIndex}>{point}</p>
                  ))}
                  <hr />
                </React.Fragment>
              ))}
              
              {(primaryType?.id === 1 && isPaid) && <div className="quote-bubble">{typeDetails.bottomDescription}</div>}

              {!isPaid && (
                <PurchaseModal testResultId={id} />
              )}
            </div>
          </div>
        </div>
        
        {/* TODO: logic */}
        {primaryType?.id === 1 && (
          <div className="test-result">
            <div className="test-result__inner">
              <div className="test-result__title">
                –¢–≤–æ—è –∫–∞—Ä'—î—Ä–Ω–∞ Road-map
              </div>
              <div className={!isPaid ? 'test-result__content hidden' : 'test-result__content'}>
                <h3>–¢–µ–±–µ –º–æ—Ç–∏–≤—É—î –≤ —Ä–æ–±–æ—Ç—ñ:</h3>
                <div className="motivation-block">
                  <div className="motivation-block__left">
                    <ol>
                      <li>–ø—Ä–∞–≥–Ω–µ–Ω–Ω—è –¥–æ –¥–æ—Å–∫–æ–Ω–∞–ª–æ—Å—Ç—ñ;</li>
                      <li>–≤–∏—Å–æ–∫—ñ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏;</li>
                      <li>–≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å –ø–µ—Ä–µ–¥ —Å–æ–±–æ—é —Ç–∞ —ñ–Ω—à–∏–º–∏;</li>
                      <li>–±–∞–∂–∞–Ω–Ω—è –±—É—Ç–∏ ¬´–ø—Ä–∞–≤–∏–ª—å–Ω–∏–º¬ª —Ñ–∞—Ö—ñ–≤—Ü–µ–º, —è–∫–æ–º—É –º–æ–∂–Ω–∞ –¥–æ–≤—ñ—Ä—è—Ç–∏.</li>
                    </ol>
                  </div>
                  <div className="motivation-block__right">

                  </div>
                </div>

                <h3>–ü—ñ–¥—Å–≤—ñ–¥–æ–º–∏–π –º–æ—Ç–∏–≤:</h3>
                <div className="test-result__description">–ë—É—Ç–∏ –±–µ–∑–¥–æ–≥–∞–Ω–Ω–∏–º, —â–æ–± –∑–∞—Å–ª—É–∂–∏—Ç–∏ –ø–æ–≤–∞–≥—É —ñ —É–Ω–∏–∫–Ω—É—Ç–∏ –∫—Ä–∏—Ç–∏–∫–∏ ‚Äî –ø–µ—Ä—à –∑–∞ –≤—Å–µ –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—ó.</div>

                <h3>–¢–æ–±—ñ –≤–∞–∂–ª–∏–≤–æ –≤ —Ä–æ–±–æ—Ç—ñ, (—Å–ø–∏—Ä–∞–π—Å—è –Ω–∞ —Ü—ñ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –∫–æ–º–∞–Ω–¥–∏):</h3>
                <ul className="ckeckbox-list">
                  <li>—Ä–æ–±–∏—Ç–∏ ¬´–ø—Ä–∞–≤–∏–ª—å–Ω—É¬ª —Å–ø—Ä–∞–≤—É;</li>
                  <li>–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑–∞ —Ü—ñ–Ω–Ω–æ—Å—Ç—è–º–∏;</li>
                  <li>–∑–º—ñ–Ω—é–≤–∞—Ç–∏ —â–æ—Å—å –Ω–∞ –∫—Ä–∞—â–µ;</li>
                  <li>–≤—ñ–¥—á—É–≤–∞—Ç–∏, —â–æ –≤–∞—à–∞ —Ä–æ–±–æ—Ç–∞ –º–∞—î —Å–µ–Ω—Å, –∫–æ—Ä–∏—Å—Ç—å —ñ –º–æ—Ä–∞–ª—å–Ω—É –≤–∞–≥—É.</li>
                </ul>
                 <hr />

                <h3>–¢–≤—ñ–π –æ—Å–Ω–æ–≤–Ω–∏–π —Å—Ç—Ä–∞—Ö:</h3>
                <p>–ó—Ä–æ–±–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É –∞–±–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —Å–≤–æ—ó–º –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º. –û—Å–Ω–æ–≤–Ω–∞ –º–æ—Ç–∏–≤–∞—Ü—ñ—è ‚Äî –±—É—Ç–∏ —Ö–æ—Ä–æ—à–∏–º–∏, –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª—è—Ç–∏ –Ω–µ–¥–æ–ª—ñ–∫–∏ —è–∫ —É —Å–æ–±—ñ, —Ç–∞–∫ —ñ –≤ –æ—Ç–æ—á—É—é—á–æ–º—É —Å–≤—ñ—Ç—ñ.</p>
                <p>
                  <span style={{ color: '#a41010', fontWeight: '700' }}>
                  –°—Ç—Ä–∞—Ö–∏ - —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –≥–æ–ª–æ–≤–Ω–µ —Ä–æ–∑—É–º—ñ—Ç–∏ —á–∏ –Ω–µ –∫–µ—Ä—É—é—Ç—å –≤–æ–Ω–∏ —Ç–æ–±–æ—é, –¥–ª—è —Ü—å–æ–≥–æ —Ç—Ä–µ–±–∞ —ó—Ö –¥—É–∂–µ –¥–æ–±—Ä–µ –∑–Ω–∞—Ç–∏.
                  </span>
                </p>
                <hr />

                <div className="content-subtitle">–¢–≤–æ—ó —Å–∏–ª—å–Ω—ñ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ —Å—Ç–æ—Ä–æ–Ω–∏¬† —Ç–≤–æ—ó —Å–ª–∞–±–∫—ñ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ —Å—Ç–æ—Ä–æ–Ω–∏</div>
                <div className="list-columns">
                  <div className="list-columns__item">
                    <div className="list-columns__item-subtitle">–°–∏–ª—å–Ω—ñ —Å—Ç–æ—Ä–æ–Ω–∏:</div>
                    <ul>
                      <li>–≤–∏—Å–æ–∫–∞ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∞ —ñ –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤–∞–Ω—ñ—Å—Ç—å;</li>
                      <li>–≤–º—ñ–Ω–Ω—è –±–∞—á–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ, —è–∫—ñ —ñ–Ω—à—ñ –º–æ–∂—É—Ç—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏;</li>
                      <li>–≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å —ñ –≤—ñ–¥–¥–∞–Ω—ñ—Å—Ç—å —Å–ø—Ä–∞–≤—ñ;</li>
                      <li>–º–æ—Ä–∞–ª—å–Ω–∞ —Å—Ç—ñ–π–∫—ñ—Å—Ç—å —ñ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤—ñ—Å—Ç—å;</li>
                      <li>—Å–∏–ª—å–Ω–µ –ø—Ä–∞–≥–Ω–µ–Ω–Ω—è –¥–æ –≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è.</li>
                    </ul>
                  </div>
                  <div className="list-columns__item">
                    <div className="list-columns__item-subtitle">–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ —Å–ª–∞–±–∫–æ—Å—Ç—ñ:</div>
                    <ul>
                      <li>–ø–µ—Ä—Ñ–µ–∫—Ü—ñ–æ–Ω—ñ–∑–º –º–æ–∂–µ –ø—Ä–∏–∑–≤–æ–¥–∏—Ç–∏ –¥–æ –≤—ñ–¥–∫–ª–∞–¥–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å (–ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü—ñ—ó);</li>
                      <li>—Å—Ö–∏–ª—å–Ω—ñ—Å—Ç—å –¥–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—ñ ‚Äî —è–∫ –¥–æ —Å–µ–±–µ, —Ç–∞–∫ —ñ –¥–æ —ñ–Ω—à–∏—Ö;</li>
                      <li>–≤–∏—Å–æ–∫–∏–π —Ä—ñ–≤–µ–Ω—å –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ —Å—Ç—Ä–µ—Å—É —á–µ—Ä–µ–∑ –ø–æ—Ç—Ä–µ–±—É –≤ —ñ–¥–µ–∞–ª—å–Ω–æ—Å—Ç—ñ.</li>
                    </ul>
                  </div>
                </div>
                 <hr />

                <div className="content-subtitle">
                  <LampIcon width={40} height={40} />
                  –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ —É—Å–ø—ñ—à–Ω–æ–≥–æ –∫–∞—Ä'—î—Ä–Ω–æ–≥–æ —Ä–æ–∑–≤–∏—Ç–∫—É:
                </div>
                <ol className="counter-list">
                  <li>–ù–∞–≤—á—ñ—Ç—å—Å—è <b>–≤–∏–∑–Ω–∞—á–∞—Ç–∏ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∏:</b> –Ω–µ –∫–æ–∂–Ω–∞ –∑–∞–¥–∞—á–∞ –ø–æ—Ç—Ä–µ–±—É—î –æ–¥–Ω–∞–∫–æ–≤–æ—ó —É–≤–∞–≥–∏ —Ç–∞ —ñ–¥–µ–∞–ª—å–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.¬†</li>
                  <li>–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ <b>–ø—Ä–∞–≤–∏–ª–æ 80/20:</b> –≤–∏–∑–Ω–∞—á–∞–π—Ç–µ –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à—ñ –∑–∞–≤–¥–∞–Ω–Ω—è, —è–∫—ñ –¥–∞–¥—É—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.</li>
                  <li><b>–í—ñ–¥–ø—É—Å—Ç—ñ—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å:</b> –Ω–µ –±—ñ–π—Ç–µ—Å—è –¥–µ–ª–µ–≥—É–≤–∞—Ç–∏. –ù–∞–≤—á–∞–Ω–Ω—è –¥–æ–≤—ñ—Ä—è—Ç–∏ —ñ–Ω—à–∏–º –¥–æ–∑–≤–æ–ª–∏—Ç—å –≤–∞–º –∑–æ—Å–µ—Ä–µ–¥–∏—Ç–∏—Å—è –Ω–∞ –±—ñ–ª—å—à –∑–Ω–∞—á—É—â–∏—Ö –∑–∞–≤–¥–∞–Ω–Ω—è—Ö —ñ —É–Ω–∏–∫–Ω—É—Ç–∏ –µ–º–æ—Ü—ñ–π–Ω–æ–≥–æ –≤–∏–≥–æ—Ä–∞–Ω–Ω—è.</li>
                  <li><b>–†–æ–∑–≤–∏–≤–∞–π—Ç–µ –µ–º–æ—Ü—ñ–π–Ω—É –≥–Ω—É—á–∫—ñ—Å—Ç—å:</b> —Ä–æ–±–æ—Ç–∞ –∑ –µ–º–æ—Ü—ñ—è–º–∏ –¥–æ–ø–æ–º–æ–∂–µ –∑–Ω–∏–∑–∏—Ç–∏ —Ä—ñ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—ñ –¥–æ —Å–µ–±–µ —Ç–∞ —ñ–Ω—à–∏—Ö. –ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –≤–¥—è—á–Ω—ñ—Å—Ç—å —ñ —Ñ–æ–∫—É—Å—É–π—Ç–µ—Å—å –Ω–∞ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è—Ö, –∞ –Ω–µ –Ω–∞ –Ω–µ–¥–æ–ª—ñ–∫–∞—Ö.</li>
                  <li><b>–ü—Ä–∏–π–º—ñ—Ç—å —ñ–¥–µ—é "–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–æ–±—Ä–µ":</b> –≤–∞—à–∞ —Ä–æ–±–æ—Ç–∞ –Ω–µ –∑–∞–≤–∂–¥–∏ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–æ—é. –ß–∞—Å—Ç–æ "–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–æ–±—Ä–µ" ‚Äî —Ü–µ —Å–∞–º–µ —Ç–µ, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—É —Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.</li>
                  <li><b>–†–æ–∑—à–∏—Ä—é–π—Ç–µ —É—è–≤–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö:</b> —É—Å–ø—ñ—Ö ‚Äî —Ü–µ –Ω–µ —Ç—ñ–ª—å–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∞–ª–µ –π —à–ª—è—Ö –¥–æ –Ω—å–æ–≥–æ. –î–æ–¥–∞–π—Ç–µ –±—ñ–ª—å—à–µ –≥–Ω—É—á–∫–æ—Å—Ç—ñ —Ç–∞ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è –≤ –ø—Ä–æ—Ü–µ—Å —Å–≤–æ—î—ó —Ä–æ–±–æ—Ç–∏.</li>
                </ol>

                {!isPaid && (
                  <PurchaseModal testResultId={id} />
                )}
              </div>
            </div>
          </div>
        )}
        

        <div className="suitable-professions">
          <div className="suitable-professions__title">
            –ü—Ä–æ—Ñ–µ—Å—ñ—ó, —è–∫—ñ –≤–∞–º –ø—ñ–¥—ñ–π–¥—É—Ç—å –≤–∏—Ö–æ–¥—è—á–∏ –∑ –≤–∞—à–æ–≥–æ –ø—Å–∏—Ö–æ—Ç–∏–ø—É
          </div>
          
          <div className={!isPaid ? 'suitable-professions__list hidden' : 'suitable-professions__list'}>
            {professionCategories?.map((category, index) => (
              <div className="suitable-professions__item" key={index}>
                <div className="suitable-professions__item-left">
                    <div className="suitable-professions__item-title">{category.title}</div>
                    <div className="suitable-professions__item-text">{category.description}</div>
                </div>
                <div className="suitable-professions__item-right">
                  <div className="suitable-professions__item-items">
                    {category.professions.map((profession, idx) => (
                      <div className="suitable-professions__item-profession" key={idx}>
                        {profession}
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            ))}
          </div>
          
          {!isPaid && (
            <PurchaseModal testResultId={id} />
          )}

        </div>
      </div>
    </>
  );
};

export default TestResult;